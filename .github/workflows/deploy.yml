name: Deploy Laravel + Vue with pnpm to EC2

on:
  push:
    branches:
      - develop

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4
          extensions: mbstring, bcmath, curl, pdo, xml

      - name: Setup Node + pnpm
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install pnpm
        run: npm install -g pnpm

      # CI용 .env (테스트용)
      - name: Create .env
        run: |
          echo "APP_ENV=local" >> .env
          echo "APP_KEY=base64:dummykey1234567890=" >> .env
          echo "DB_CONNECTION=sqlite" >> .env
          echo "DB_DATABASE=database/database.sqlite" >> .env
          mkdir -p database
          touch database/database.sqlite

      - name: Composer install
        run: composer install --no-dev --optimize-autoloader

      - name: Frontend build
        run: |
          pnpm install
          pnpm run build

      - name: Deploy to EC2
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            TIMESTAMP=$(date +%Y%m%d%H%M%S)
            RELEASE_DIR=/home/ubuntu/Site/releases/$TIMESTAMP

            git clone https://github.com/gonggoo-io/Site.git $RELEASE_DIR
            cd $RELEASE_DIR
            git checkout develop

            composer install --no-dev --optimize-autoloader
            pnpm install
            pnpm run build

            php artisan migrate --force
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache

            sudo chown -R ubuntu:www-data storage bootstrap/cache
            sudo chmod -R 775 storage bootstrap/cache

            ln -sfn $RELEASE_DIR /home/ubuntu/Site/current
            sudo systemctl reload nginx
          EOF
